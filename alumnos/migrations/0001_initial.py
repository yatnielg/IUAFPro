# Generated by Django 5.2.7 on 2025-10-14 15:07

import alumnos.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConceptoPago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=40, unique=True)),
                ('nombre', models.CharField(max_length=120)),
                ('recurrente', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=120)),
            ],
            options={
                'verbose_name': 'Estado/Provincia',
                'verbose_name_plural': 'Estados/Provincias',
                'ordering': ['pais__nombre', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Financiamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beca', models.CharField(blank=True, help_text='Ej.: Beca Académica, Beca 50%, Convenio, etc.', max_length=120, verbose_name='Beca')),
            ],
            options={
                'verbose_name': 'Financiamiento',
                'verbose_name_plural': 'Financiamientos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('numero_estudiante', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='Número de estudiante')),
                ('nombre', models.CharField(max_length=120, verbose_name='Nombre(s)')),
                ('apellido_p', models.CharField(blank=True, max_length=120, verbose_name='Apellido paterno')),
                ('apellido_m', models.CharField(blank=True, max_length=120, verbose_name='Apellido materno')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('telefono', models.CharField(blank=True, max_length=40)),
                ('curp', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='CURP')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('sexo', models.CharField(blank=True, choices=[('Hombre', 'Hombre'), ('Mujer', 'Mujer')], max_length=20, verbose_name='Sexo')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perfil_alumno', to=settings.AUTH_USER_MODEL)),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alumnos', to='alumnos.estado')),
            ],
            options={
                'ordering': ['apellido_p', 'apellido_m', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12)),
                ('fecha_cargo', models.DateField()),
                ('fecha_vencimiento', models.DateField(blank=True, null=True)),
                ('folio', models.CharField(blank=True, max_length=50)),
                ('pagado', models.BooleanField(default=False)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargos', to='alumnos.alumno')),
                ('concepto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='alumnos.conceptopago')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentosAlumno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acta_nacimiento', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Acta de nacimiento')),
                ('curp', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='CURP')),
                ('certificado_estudios', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Certificado de estudios')),
                ('titulo_grado', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Título o grado de estudios')),
                ('solicitud_registro', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Solicitud de registro')),
                ('validacion_autenticidad', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Documento de validación de autenticidad')),
                ('carta_compromiso', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Carta compromiso')),
                ('carta_interes', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Carta de interés académico')),
                ('identificacion_oficial', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Identificación oficial (INE, pasaporte, etc.)')),
                ('otro_documento', models.FileField(blank=True, null=True, upload_to=alumnos.models.doc_upload_path, verbose_name='Otro documento')),
                ('fecha_ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('alumno', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='alumnos.alumno')),
            ],
            options={
                'verbose_name': 'Documentos del alumno',
                'verbose_name_plural': 'Documentos de alumnos',
            },
        ),
        migrations.CreateModel(
            name='InformacionEscolar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_colegiatura', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Precio colegiatura')),
                ('monto_descuento', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Monto de descuento')),
                ('meses_programa', models.PositiveIntegerField(verbose_name='Meses de programa')),
                ('precio_inscripcion', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Precio de inscripción')),
                ('precio_titulacion', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Precio de titulación')),
                ('precio_equivalencia', models.DecimalField(decimal_places=2, default=Decimal('-1.00'), max_digits=12, verbose_name='Precio de equivalencia')),
                ('numero_reinscripciones', models.PositiveIntegerField(default=0, verbose_name='No. de reinscripciones')),
                ('precio_final', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Precio Final')),
                ('fin_programa', models.DateField(verbose_name='Fin del programa')),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('fecha_alta', models.DateTimeField(default=django.utils.timezone.now)),
                ('grupo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Grupo')),
                ('modalidad', models.CharField(choices=[('en_linea', 'En línea'), ('presencial', 'Presencial')], default='en_linea', max_length=15, verbose_name='Modalidad')),
                ('matricula', models.CharField(blank=True, max_length=64, null=True, verbose_name='Matrícula')),
                ('estatus_academico', models.CharField(blank=True, max_length=60, verbose_name='Estatus académico')),
                ('estatus_administrativo', models.CharField(blank=True, max_length=60, verbose_name='Estatus administrativo')),
                ('financiamiento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumnos', to='alumnos.financiamiento', verbose_name='Financiamiento')),
            ],
            options={
                'verbose_name': 'Informacion Escolar',
                'verbose_name_plural': 'Informacion Escolar',
                'ordering': ['-creado_en'],
            },
        ),
        migrations.AddField(
            model_name='alumno',
            name='informacionEscolar',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumno', to='alumnos.informacionescolar', verbose_name='Plan financiero'),
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12)),
                ('metodo', models.CharField(blank=True, max_length=40)),
                ('banco', models.CharField(blank=True, max_length=60)),
                ('referencia', models.CharField(blank=True, max_length=80)),
                ('descripcion', models.TextField(blank=True)),
                ('conciliado', models.BooleanField(default=False)),
                ('alumno', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos', to='alumnos.alumno')),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagos', to='alumnos.cargo')),
            ],
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=120, unique=True)),
                ('codigo_iso2', models.CharField(blank=True, max_length=2, verbose_name='Código ISO-2')),
                ('codigo_iso3', models.CharField(blank=True, max_length=3, verbose_name='Código ISO-3')),
                ('requiere_estado', models.BooleanField(default=False, help_text='Si es verdadero, el alumno debe seleccionar un estado/provincia.', verbose_name='¿Requiere estado/provincia?')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'ordering': ['nombre'],
                'indexes': [models.Index(fields=['nombre'], name='alumnos_pai_nombre_bd0e2a_idx'), models.Index(fields=['codigo_iso2'], name='alumnos_pai_codigo__38fef7_idx'), models.Index(fields=['codigo_iso3'], name='alumnos_pai_codigo__998ed5_idx')],
            },
        ),
        migrations.AddField(
            model_name='estado',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estados', to='alumnos.pais'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='pais',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alumnos', to='alumnos.pais'),
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Programas (código)')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre de Cursos')),
                ('meses_programa', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Meses Programa')),
                ('colegiatura', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Colegiatura')),
                ('inscripcion', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Inscripción')),
                ('reinscripcion', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Reinscripción')),
                ('equivalencia', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Equivalencia')),
                ('titulacion', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Titulación')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
                'ordering': ['nombre'],
                'indexes': [models.Index(fields=['codigo'], name='alumnos_pro_codigo_8f6308_idx'), models.Index(fields=['nombre'], name='alumnos_pro_nombre_b06565_idx'), models.Index(fields=['activo'], name='alumnos_pro_activo_008014_idx')],
            },
        ),
        migrations.AddField(
            model_name='informacionescolar',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='programa', to='alumnos.programa'),
        ),
        migrations.CreateModel(
            name='Sede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre de la sede')),
                ('activo', models.BooleanField(default=True)),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sedes', to='alumnos.estado')),
                ('pais', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sedes', to='alumnos.pais')),
            ],
            options={
                'verbose_name': 'Sede',
                'verbose_name_plural': 'Sedes',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='alumno',
            name='sede',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alumnos', to='alumnos.sede'),
        ),
        migrations.AddIndex(
            model_name='estado',
            index=models.Index(fields=['pais', 'nombre'], name='alumnos_est_pais_id_a1834c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='estado',
            unique_together={('pais', 'nombre')},
        ),
        migrations.AddIndex(
            model_name='sede',
            index=models.Index(fields=['nombre'], name='alumnos_sed_nombre_a45050_idx'),
        ),
        migrations.AddIndex(
            model_name='sede',
            index=models.Index(fields=['pais'], name='alumnos_sed_pais_id_364b80_idx'),
        ),
        migrations.AddIndex(
            model_name='sede',
            index=models.Index(fields=['estado'], name='alumnos_sed_estado__9eb336_idx'),
        ),
        migrations.AddIndex(
            model_name='sede',
            index=models.Index(fields=['activo'], name='alumnos_sed_activo_535424_idx'),
        ),
        migrations.AddConstraint(
            model_name='sede',
            constraint=models.UniqueConstraint(fields=('nombre', 'pais', 'estado'), name='uniq_sede_nombre_pais_estado'),
        ),
        migrations.AddIndex(
            model_name='alumno',
            index=models.Index(fields=['numero_estudiante'], name='alumnos_alu_numero__174d29_idx'),
        ),
        migrations.AddIndex(
            model_name='alumno',
            index=models.Index(fields=['curp'], name='alumnos_alu_curp_dd4e6b_idx'),
        ),
        migrations.AddIndex(
            model_name='alumno',
            index=models.Index(fields=['apellido_p', 'apellido_m'], name='alumnos_alu_apellid_2bb7f5_idx'),
        ),
        migrations.AddIndex(
            model_name='alumno',
            index=models.Index(fields=['pais'], name='alumnos_alu_pais_id_0a317d_idx'),
        ),
        migrations.AddIndex(
            model_name='alumno',
            index=models.Index(fields=['estado'], name='alumnos_alu_estado__c40fd0_idx'),
        ),
    ]
