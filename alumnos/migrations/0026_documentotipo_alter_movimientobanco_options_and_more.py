# Generated by Django 5.2.7 on 2025-10-22 17:09

import alumnos.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('alumnos', '0025_movimientobanco'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentoTipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('nombre', models.CharField(max_length=120)),
                ('descripcion', models.TextField(blank=True)),
                ('multiple', models.BooleanField(default=False, help_text='Si permite más de un archivo por alumno/plan.')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tipo de documento',
                'verbose_name_plural': 'Tipos de documento',
                'ordering': ['nombre'],
            },
        ),
        migrations.AlterModelOptions(
            name='movimientobanco',
            options={'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='DocumentoAlumno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archivo', models.FileField(upload_to=alumnos.models.doc_upload_path)),
                ('verificado_en', models.DateTimeField(blank=True, null=True)),
                ('valido', models.BooleanField(default=None, help_text='¿Validado documentalmente?', null=True)),
                ('notas', models.TextField(blank=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
                ('info_escolar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='alumnos.informacionescolar')),
                ('subido_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='docs_subidos', to=settings.AUTH_USER_MODEL)),
                ('verificado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='docs_verificados', to=settings.AUTH_USER_MODEL)),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentos', to='alumnos.documentotipo')),
            ],
            options={
                'verbose_name': 'Documento del alumno',
                'verbose_name_plural': 'Documentos del alumno',
                'ordering': ['-creado_en'],
                'indexes': [models.Index(fields=['info_escolar', 'tipo'], name='alumnos_doc_info_es_8a2593_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProgramaDocumentoRequisito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obligatorio', models.BooleanField(default=True)),
                ('minimo', models.PositiveIntegerField(default=1, help_text='Cantidad mínima de archivos requeridos.')),
                ('maximo', models.PositiveIntegerField(default=1, help_text='Cantidad máxima permitida (ignorado si multiple=False).')),
                ('activo', models.BooleanField(default=True)),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisitos_documentales', to='alumnos.programa')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='requisitos_programa', to='alumnos.documentotipo')),
            ],
            options={
                'verbose_name': 'Requisito documental de Programa',
                'verbose_name_plural': 'Requisitos documentales de Programas',
                'ordering': ['programa__nombre', 'tipo__nombre'],
                'unique_together': {('programa', 'tipo')},
            },
        ),
    ]
