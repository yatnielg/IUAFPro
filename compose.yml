services:
db:
image: postgres:16-alpine
container_name: miapp_db
restart: unless-stopped
environment:
POSTGRES_DB: ${POSTGRES_DB}
POSTGRES_USER: ${POSTGRES_USER}
POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
volumes:
- pgdata:/var/lib/postgresql/data
healthcheck:
test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
interval: 10s
timeout: 5s
retries: 5


web:
build:
context: .
dockerfile: docker/web/Dockerfile
container_name: miapp_web
restart: unless-stopped
depends_on:
db:
condition: service_healthy
env_file: .env
environment:
DJANGO_SETTINGS_MODULE: miapp.settings
PYTHONUNBUFFERED: "1"
volumes:
- ./src:/app
- static_data:/app/static
- media_data:/app/media
command: ["/app/docker/web/entrypoint.sh"]


nginx:
build:
context: .
dockerfile: docker/nginx/Dockerfile
container_name: miapp_nginx
restart: unless-stopped
depends_on:
- web
ports:
- "80:80"
volumes:
- static_data:/app/static:ro
- media_data:/app/media:ro
- ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro


volumes:
pgdata:
static_data:
media_data: